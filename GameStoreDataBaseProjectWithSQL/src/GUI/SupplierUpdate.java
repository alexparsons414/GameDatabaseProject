/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Core.Supplier;
import DAO.SupplierDAO;
import javax.swing.JOptionPane;

/**
 *
 * @author Doubl
 */
public class SupplierUpdate extends javax.swing.JDialog {
    
    private SupplierDAO supplierDAO;
    private TablesDisplay tablesDisplay;
    
    public SupplierUpdate(TablesDisplay tablesDisplay, SupplierDAO supplierDAO){
        this.supplierDAO = supplierDAO;
        this.tablesDisplay = tablesDisplay;
        initComponents();
        this.setTitle("Supplier");
    }
    /**
     * Creates new form SupplierUpdate
     */
    public SupplierUpdate(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        phoneText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        zipText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        stateText = new javax.swing.JTextField();
        cityText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        addressText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        IDtext = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        update = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel7.setText("Phone #");

        jLabel9.setText("Zip Code");

        jLabel4.setText("State");

        jLabel6.setText("City");

        jLabel5.setText("Address");

        jLabel3.setText("Name");

        jLabel1.setText("Supplier ID*");

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        update.setText("Update Existing");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        submit.setText("Submit New");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        jLabel8.setText("Fields with * are required");

        jLabel10.setText("to create new entries");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 181, Short.MAX_VALUE)
                        .addComponent(submit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IDtext, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nameText, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addressText, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cityText, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(stateText, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(zipText, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(phoneText))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(IDtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(stateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(zipText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(submit)
                        .addComponent(update)
                        .addComponent(delete)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_updateActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        save();
    }//GEN-LAST:event_submitActionPerformed

    protected void update(){
        try{
            int id = Integer.parseInt(IDtext.getText());
            String name = nameText.getText(), 
                    address = addressText.getText(), city = cityText.getText(), 
                    state = stateText.getText(), zip = zipText.getText(), 
                    phone = phoneText.getText();
            if(name.equals("")){
                name = null;
            }
            if(address.equals("")){
                address = null;
            }
            if(city.equals("")){
                city = null;
            }
            if(state.equals("")){
                state = null;
            }
            if(zip.equals("")){
                zip = null;
            }
            if(phone.equals("")){
                phone = null;
            }
            Supplier temp = new Supplier(id, name, address, city, state, zip, phone);
            try{
                supplierDAO.update(temp);
                setVisible(false);
                dispose();
                tablesDisplay.refreshView();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(tablesDisplay,"Error updating "
                        + "supplier: " + e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error: Please enter an integer.");
        }
    }
    
    protected void save(){
        try{
            int id = Integer.parseInt(IDtext.getText());
            String name = nameText.getText(), 
                    address = addressText.getText(), city = cityText.getText(), 
                    state = stateText.getText(), zip = zipText.getText(), 
                    phone = phoneText.getText();
            if(name.equals("")){
                name = null;
            }
            if(address.equals("")){
                address = null;
            }
            if(city.equals("")){
                city = null;
            }
            if(state.equals("")){
                state = null;
            }
            if(zip.equals("")){
                zip = null;
            }
            if(phone.equals("")){
                phone = null;
            }
            Supplier temp = new Supplier(id, name, address, city, state, zip, phone);
            try{
                supplierDAO.addSupplier(temp);
                setVisible(false);
                dispose();
                tablesDisplay.refreshView();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(tablesDisplay,"Error adding "
                        + "supplier: " + e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error: Please enter fields with correct information.");
        }
    }
    
    protected void delete(){
        try{
            int id = Integer.parseInt(IDtext.getText());
            String name = nameText.getText(), 
                    address = addressText.getText(), city = cityText.getText(), 
                    state = stateText.getText(), zip = zipText.getText(), 
                    phone = phoneText.getText();
            if(name.equals("")){
                name = null;
            }
            if(address.equals("")){
                address = null;
            }
            if(city.equals("")){
                city = null;
            }
            if(state.equals("")){
                state = null;
            }
            if(zip.equals("")){
                zip = null;
            }
            if(phone.equals("")){
                phone = null;
            }
            Supplier temp = new Supplier(id, name, address, city, state, zip, phone);
            try{
                supplierDAO.delete(temp);
                setVisible(false);
                dispose();
                tablesDisplay.refreshView();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(tablesDisplay,"Error deleting "
                        + "supplier: " + e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error: Please enter fields with correct information.");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupplierUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupplierUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupplierUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupplierUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SupplierUpdate dialog = new SupplierUpdate(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDtext;
    private javax.swing.JTextField addressText;
    private javax.swing.JTextField cityText;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField phoneText;
    private javax.swing.JTextField stateText;
    private javax.swing.JButton submit;
    private javax.swing.JButton update;
    private javax.swing.JTextField zipText;
    // End of variables declaration//GEN-END:variables
}
